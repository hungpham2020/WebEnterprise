@using System.Security.Claims
@model IEnumerable<WebEnterprise.Models.DTO.PostDTO>
@{
    ViewData["Title"] = "UserWall";
    Layout = "../Shared/_Layout.cshtml";
}


@{
    List<int> selectedids = new List<int>();
    if (TempData["CatIds"] != null)
    {
        selectedids = TempData["CatIds"].ToString().Split(',')
        .Select(id => Int32.Parse(id)).ToList();
    }
    var userid = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<h1 class="text-center">
    Your Posts
</h1>

@if (TempData["message"] != null)
{
    ViewBag.Message = TempData["message"];
}
@Html.Partial("_Message")

<div class="container-fluid">
    <div class="nk-content-inner">

        <div class="nk-content-body">



            @foreach (var item in Model)
            {
                <div class="col-xxl-6 mb-2">
                    <div class="card h-100">
                        <div class="card-inner">
                            <div class="card-title-group align-start gx-3 mb-3">
                                <div class="card-title">
                                    <h6 class="title">@Html.DisplayFor(modelItem => item.Title)</h6>
                                    <span class="tb-sub">
                                        By
                                        @Html.DisplayFor(modelItem => item.AuthorName)
                                    </span>

                                    <p>On @Html.DisplayFor(modelItem => item.OpenDate)</p>
                                </div>
                            </div>

                            <div class="nk-sale-data-group align-center justify-between gy-3 gx-5">
                                @*//-------------------------------------------------------------*@

                                <div class="nk-tb-col">
                                    <span class="tb-sub">
                                        <h8>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </h8>
                                    </span>
                                </div>

                            </div>
                        </div><!-- .card -->


                    <div id="Placeholder"></div>

                          @*-----------Like and comment-------------*@
                            <div>
                                <div class="btn-parent row text-center">
                                    <div class="col-12 text-center">
                                        <input hidden value="@item.Id" class="post-id" />
                                        @if(item.Status == null)
                                        {
                                            <button type="button" class="btn btn-light btn-like" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                                <i class="fas fa-thumbs-up mr-1" aria-hidden="true"></i> <span>@item.Like</span>
                                            </button>
                                            <button type="button" class="btn btn-light btn-dislike" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                                <i class="fas fa-thumbs-down mr-1" aria-hidden="true"></i> <span>@item.DisLike</span>
                                            </button>
                                        }
                                        @if (item.Status == true)
                                        {
                                            <button type="button" class="btn btn-success btn-like" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                                <i class="fas fa-thumbs-up mr-1" aria-hidden="true"></i> <span>@item.Like</span>
                                            </button>
                                            <button type="button" class="btn btn-light btn-dislike" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                                <i class="fas fa-thumbs-down mr-1" aria-hidden="true"></i> <span>@item.DisLike</span>
                                            </button>
                                        }
                                        @if(item.Status == false)
                                        {
                                            <button type="button" class="btn btn-light btn-like" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                            <i class="fas fa-thumbs-up mr-1" aria-hidden="true"></i> <span>@item.Like</span>
                                            </button>
                                            <button type="button" class="btn btn-success btn-dislike" data-status=@(item.Status == true ? "true": item.Status == false ? "false": null)>
                                                <i class="fas fa-thumbs-down mr-1" aria-hidden="true"></i> <span>@item.DisLike</span>
                                            </button>
                                        }
                                        <button class="btn btn-info">
                                            @Html.ActionLink("Comment", "ShowComment" ,new { id = item.Id })
                                        </button>

                                    </div>

                                    
                            
                                        @*--------------------------------------*@
                                         <li class="mr-n1">
                                            <div class="dropdown">
                                                <a href="#" class="dropdown-toggle btn btn-icon btn-trigger" data-toggle="dropdown"><em class="icon ni ni-more-h"></em></a>
                                                <div class="dropdown-menu dropdown-menu-right">
                                                    <ul class="link-list-opt no-bdr">
                                                        <li><span>@Html.ActionLink("Edit", "EditPost", new { id = item.Id })</span></li>
                                                        <li><span>@Html.ActionLink("Delete", "DeletePost", new { id = item.Id }, new {onClick = "return confirm('Are you sure?')"})</span></li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </li>
                                        @*------------------------------------------*@


                                    <div class="col-1"></div>
                                </div>
                            </div>
                    </div><!-- .col -->

            </div>
            }

        </div>
    </div>
</div>




@section Scripts{
    <script type="text/javascript">
        $(function() {
            $("i" ).click(function() {
                $( "i,span" ).toggleClass( "press", 1000 );
            });
        });

        $(document).ready(function() {
            $('.btn-like').click(function(){
                var parent = $(this).parents('.btn-parent')
                var postId = parent.find('.post-id').val()
                var userId = "@userid"
                var thisEl = $(this)
                var status = $(this).data("status")

                var data = {
                    "postId": postId,
                    "userId": userId,
                    "status": status === true ? null: true
                }
                
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Like", "User")',
                    data: req = JSON.stringify(data),
                    cache: false,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    processData: false,
                    success: function(res){
                        var oldNumber = parseInt(thisEl.find("span").text());
                        if (res.status) {
                            thisEl.find("span").text(oldNumber + 1)
                            thisEl.removeClass().addClass("btn btn-success btn-like")
                            thisEl.parent().find(".btn-dislike").removeClass().addClass("btn btn-light btn-dislike")
                        }
                        else
                        {
                            thisEl.find("span").text(oldNumber - 1)
                            thisEl.removeClass().addClass("btn btn-light btn-like")
                            thisEl.parent().find(".btn-dislike").removeClass().addClass("btn btn-light btn-dislike")
                        }
                        if (status === false) {
                            var oldDisNumber = parseInt(thisEl.parent().find(".btn-dislike").find("span").text());
                            thisEl.parent().find(".btn-dislike").find("span").text(oldDisNumber - 1)
                        }
                        thisEl.data("status", res.status)
                        thisEl.parent().find(".btn-dislike").data("status", res.status)
                    }
                })
            })
            $('.btn-dislike').click(function(){
                var parent = $(this).parents('.btn-parent')
                var postId = parent.find('.post-id').val()
                var userId = "@userid"
                var thisEl = $(this)
                var status = $(this).data("status")
                console.log(status);
                var data = {
                    "postId": postId,
                    "userId": userId,
                    "status": status === false ? null: false
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DisLike", "User")',
                    data: req = JSON.stringify(data),
                    cache: false,
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    processData: false,
                    success: function(res){
                        var oldNumber = parseInt(thisEl.find("span").text());
                        if (res.status === false) {
                            thisEl.find("span").text(oldNumber + 1)
                            thisEl.removeClass().addClass("btn btn-success btn-dislike")
                            thisEl.parent().find(".btn-like").removeClass().addClass("btn btn-light btn-like")
                        }
                        else
                        {
                            thisEl.find("span").text(oldNumber - 1)
                            thisEl.parent().find(".btn-like").removeClass().addClass("btn btn-light btn-like")
                            thisEl.removeClass().addClass("btn btn-light btn-dislike")
                        }
                        if (status === true) {
                            var oldLikeNumber = parseInt(thisEl.parent().find(".btn-like").find("span").text());
                            console.log(oldLikeNumber)
                            thisEl.parent().find(".btn-like").find("span").text(oldLikeNumber - 1)
                        }
                        thisEl.data("status", res.status)
                        thisEl.parent().find(".btn-like").data("status", res.status)
                    }
                })
            })
        })
    </script>
}
